name: Push To Yandex Cloud CR

env:
  CR_REGISTRY: crpeafnu8o7dqtkiq2mp
  APP_IMAGE: cr.yandex/crpeafnu8o7dqtkiq2mp/app:${{ github.sha }}
  NGINX_IMAGE: cr.yandex/crpeafnu8o7dqtkiq2mp/nginx:${{ github.sha }}

on:
  workflow_dispatch:
    push:
      branches:
        - main

jobs:
  build-app:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REPOSITORY: app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG . -f Dockerfile.server
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

  build-nginx:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nginx

    steps:
      - uses: actions/checkout@v2

      - name: Yandex Cloud CR "Login" Action for GitHub Actions
        uses: yc-actions/yc-cr-login@v0.1-alpha
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REPOSITORY: nginx
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG . -f Dockerfile.nginx
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

  update-yc:
    runs-on: ubuntu-latest
    needs: [build-app, build-nginx]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.0.1
        env:
          APP_IMAGE: ${{ env.APP_IMAGE }}
          NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
          YC_VM_SSH: ${{ secrets.YC_VM_SSH }}
          NGINX_CERT: ${{ secrets.NGINX_CERT }}
          NGINX_CERT_KEY: ${{ secrets.NGINX_CERT_KEY }}
          SERVER_PORT: ${{ vars.SERVER_PORT }}
          POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: b1gmr7m3isdo78gf7ao4
          VM-name: team5g
          vm-service-account-id: ajea0ufqvn3im526qfjp
          vm-cores: 2
          vm-memory: 2Gb
          vm-disk-size: 30Gb
          vm-core-fraction: 20
          vm-subnet-id: e9bd6hcfnum09pmdb05g
          docker-compose-path: './yandex-deploy/docker-compose.yaml'
          user-data-path: './yandex-deploy/user-data.yaml'
